{"version":3,"sources":["interesting_tags.js","Components/Index.js","Components/Tag.js","Components/Tags.js","Components/Instances.js","AppRouter.js","App.js","data_updated.js","serviceWorker.js","stores/dataStore.js","index.js"],"names":["Index","inject","observer","props","state","loading","loadingThing","rootStore","dataStore","fetchTags","setState","tag_data","this","summarizedTags","interesting_tags","table","columns","label","dataKey","cellDataGetter","rowData","cellRenderer","href","key","value","hourly","toFixed","cost","data","toJS","Component","isPrivate","Tag","pageSize","currentPage","tagKey","tagValue","instanceData","pageCount","changePageSize","bind","pageSelectFunc","fetchInstances","page","console","log","tag_key","match","params","tag_value","ret","instancesThatMatchTags","parseInt","Field","type","name","onChange","options","delta","onClickHandler","Tags","length","tagsThatMatchKeys","tags","instances","AppRouter","redirect","redirect_to","to","style","float","position","height","Header","logo","onClick","aria-label","Section","Item","title","icon","active","className","path","exact","component","Instances","React","App","Boolean","window","location","hostname","axios","require","SimpleTag","observable","Instance","instance","id","effectiveHourly","nodeType","os","provider","region","resourceIdentifier","service","lastSeen","hoursRunning","map","tag","vendorKey","vendorValue","totalSpend","vendorAccountId","count","monthly","DataStore","val","size","retVal","noneRetVal","noneRetValAssigned","seen","forEach","push","pageMax","pages","Math","ceil","fromPage","toPage","slice","keys","tmpTag","notNone","newCost","newCount","newHourly","newMonthly","result","Object","a","b","c","d","includes","instanceCount","cb","store","get","then","res","catch","err","storeName","storeData","localStorage","getItem","lastSaved","Date","now","json","JSON","stringify","setItem","load","newTags","uniqueTag","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.775c0979.chunk.js","sourcesContent":["export default [\n  \"tag_user_cost_center\",\n  \"tag_user_department\",\n]\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\n\nimport { Table } from '@puppet/react-components';\nimport { toJS } from 'mobx'\n\nimport { OverlayTrigger } from 'react-bootstrap';\nimport { Icon } from '@puppet/react-components';\n\nimport interesting_tags from '../interesting_tags';\n\n@inject('rootStore')\n@observer\nclass Index extends Component {\n  static isPrivate = true\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      loadingThing: 'tags',\n    };\n    this.props.rootStore.dataStore.fetchTags(() => {\n      this.setState({loading: false});\n    });\n  }\n\n  render () {\n    let tag_data;\n    tag_data = this.props.rootStore.dataStore.summarizedTags(interesting_tags);\n\n    const columns = [\n      {\n        label: 'Name',\n        dataKey: 'name',\n        cellDataGetter: ({ rowData }) => rowData,\n        cellRenderer: ({ rowData }) => <a href={`/tags/${rowData.key}`}>{rowData.key}</a>\n      },\n      {\n        label: 'Value',\n        dataKey: 'value',\n        cellDataGetter: ({ rowData }) => rowData,\n        cellRenderer: ({ rowData }) => <a href={`/tags/${rowData.key}/${rowData.value}`}>{rowData.value}</a>\n      },\n      { label: 'Count', dataKey: 'count' },\n      {\n        label: 'Hourly',\n        dataKey: 'hourly',\n        cellRenderer: ({ rowData }) => `$${rowData.hourly.toFixed(2)}`\n      },\n      {\n        label: 'Cost',\n        dataKey: 'cost',\n        cellRenderer: ({ rowData }) => `$${rowData.cost.toFixed(2)}`\n      },\n    ];\n\n    var table;\n    if (this.state.loading) {\n      table = `Loading ${this.state.loadingThing}...`\n    } else {\n      table = <Table data={toJS(tag_data)} columns={columns} />\n    }\n\n\n    return (\n      <div>\n        <br />\n        <h1>Summary</h1>\n        {table}\n      </div>\n    )\n  }\n}\n\nexport default Index\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\n\nimport { Table } from '@puppet/react-components';\nimport { toJS } from 'mobx'\n\nimport { OverlayTrigger } from 'react-bootstrap';\nimport { Form, Icon } from '@puppet/react-components';\nimport { TablePageSelector } from '@puppet/data-grid';\n\n@inject('rootStore')\n@observer\nclass Tag extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pageSize: \"10\",\n      currentPage: 1,\n      tagKey: \"\",\n      tagValue: \"\",\n      instanceData: [],\n      pageCount: 0\n    };\n\n    this.changePageSize = this.changePageSize.bind(this);\n    this.pageSelectFunc = this.pageSelectFunc.bind(this);\n  }\n\n  componentDidMount(props, state) {\n    this.props.rootStore.dataStore.fetchInstances(() => {});\n  }\n\n  pageSelectFunc(page) {\n    this.setState({\n      currentPage: page\n    });\n  }\n\n  changePageSize(pageSize) {\n    console.log(`Setting Pagesize to ${pageSize}`);\n    this.setState({\n      pageSize: pageSize\n    });\n  }\n\n  render () {\n    const tag_key   = this.props.match.params.tag_key\n    const tag_value = this.props.match.params.tag_value\n\n    var ret = this.props.rootStore.dataStore.instancesThatMatchTags(tag_key, tag_value, parseInt(this.state.pageSize), this.state.currentPage);\n    var instanceData = ret[0];\n    var pageCount = ret[1]\n\n    const columns = [\n      { label: 'id', dataKey: 'id' },\n      { label: 'effectiveHourly', dataKey: 'effectiveHourly' },\n      { label: 'name', dataKey: 'name' },\n      { label: 'nodeType', dataKey: 'nodeType' },\n      { label: 'os', dataKey: 'os' },\n      { label: 'provider', dataKey: 'provider' },\n      { label: 'region', dataKey: 'region' },\n      { label: 'resourceIdentifier', dataKey: 'resourceIdentifier' },\n      { label: 'service', dataKey: 'service' },\n      { label: 'totalSpend', dataKey: 'totalSpend' },\n      { label: 'Account ID', dataKey: 'vendorAccountId' }\n    ];\n\n    const pageSizeOptions = [\n      { value: \"10\", label: \"10\" },\n      { value: \"25\", label: \"25\" },\n      { value: \"50\", label: \"50\" },\n      { value: \"100\", label: \"100\" },\n    ];\n\n    console.log(this.pageSelectFunc);\n\n    return (\n      <div>\n        <br />\n        <h1>Tag</h1>\n        <div>\n          <b>{this.state.tagKey}</b> {this.state.tagValue}\n        </div>\n        <br />\n\n        <Form.Field\n          type=\"select\"\n          name=\"pageSize\"\n          label=\"pagesize\"\n          value={this.state.pageSize}\n          onChange={this.changePageSize}\n          options={pageSizeOptions}\n        />\n\n        <TablePageSelector\n          currentPage={this.state.currentPage}\n          pageCount={pageCount}\n          delta=\"1\"\n          onClickHandler={this.pageSelectFunc}\n        />\n\n        <Table data={toJS(instanceData)} columns={columns} />\n      </div>\n    )\n  }\n}\n\nexport default Tag\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\n\nimport { Table } from '@puppet/react-components';\nimport { toJS } from 'mobx'\n\nimport { OverlayTrigger } from 'react-bootstrap';\nimport { Icon } from '@puppet/react-components';\n\n@inject('rootStore')\n@observer\nclass Tags extends Component {\n  static isPrivate = true\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      loadingThing: 'tags',\n    };\n    this.props.rootStore.dataStore.fetchTags(() => {\n      this.setState({loading: false});\n    });\n  }\n\n  render () {\n    const tag_key = this.props.match.params.tag_key\n    let tag_data;\n\n    if (tag_key && tag_key.length > 0) {\n      console.log(tag_key);\n      tag_data = this.props.rootStore.dataStore.tagsThatMatchKeys(tag_key);\n    } else {\n      tag_data = this.props.rootStore.dataStore.tags;\n    }\n\n    const columns = [\n      {\n        label: 'Name',\n        dataKey: 'name',\n        cellDataGetter: ({ rowData }) => rowData,\n        cellRenderer: ({ rowData }) => <a href={`/tags/${rowData.key}`}>{rowData.key}</a>\n      },\n      {\n        label: 'Value',\n        dataKey: 'value',\n        cellDataGetter: ({ rowData }) => rowData,\n        cellRenderer: ({ rowData }) => <a href={`/tags/${rowData.key}/${rowData.value}`}>{rowData.value}</a>\n      },\n      { label: 'Hourly', dataKey: 'hourly' },\n      { label: 'Monthly', dataKey: 'monthly' },\n      { label: 'Count', dataKey: 'count' },\n      { label: 'Cost', dataKey: 'cost' },\n    ];\n\n    var table;\n    if (this.state.loading) {\n      table = `Loading ${this.state.loadingThing}...`\n    } else {\n      table = <Table data={toJS(tag_data)} columns={columns} />\n    }\n\n\n    return (\n      <div>\n        <br />\n        <h1>Tags</h1>\n        {table}\n      </div>\n    )\n  }\n}\n\nexport default Tags\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\n\nimport { OverlayTrigger } from 'react-bootstrap';\nimport { Table } from '@puppet/react-components';\n\nimport { toJS } from 'mobx'\n\n@inject('rootStore')\n@observer\nclass Index extends Component {\n  static isPrivate = true\n\n  componentDidMount() {\n    this.props.rootStore.dataStore.fetchInstances(() => {\n\n    });\n  }\n\n  render () {\n    var instanceData = this.props.rootStore.dataStore.instances;\n\n    const columns = [\n      { label: 'id', dataKey: 'id' },\n      { label: 'effectiveHourly', dataKey: 'effectiveHourly' },\n      { label: 'name', dataKey: 'name' },\n      { label: 'nodeType', dataKey: 'nodeType' },\n      { label: 'os', dataKey: 'os' },\n      { label: 'provider', dataKey: 'provider' },\n      { label: 'region', dataKey: 'region' },\n      { label: 'resourceIdentifier', dataKey: 'resourceIdentifier' },\n      { label: 'service', dataKey: 'service' },\n      { label: 'totalSpend', dataKey: 'totalSpend' },\n      { label: 'Account ID', dataKey: 'vendorAccountId' }\n    ];\n\n    console.log(toJS(instanceData));\n\n    return (\n      <div>\n        <br />\n        <h1>Instances</h1>\n        <b>Count: </b>{toJS(instanceData).length}\n        <Table data={toJS(instanceData)} columns={columns} />;\n      </div>\n    )\n  }\n}\n\nexport default Index\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nimport Index     from './Components/Index';\nimport Tag       from './Components/Tag';\nimport Tags      from './Components/Tags';\nimport Instances from './Components/Instances';\n\nimport { Sidebar, Content } from '@puppet/react-components';\n\nclass AppRouter extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: false,\n      redirect_to: \"\"\n    }\n  }\n\n  render() {\n    if (this.state.redirect === true) {\n      this.setState({\n        redirect: false\n      })\n      return (<Router>\n        <Redirect to={this.state.redirect_to} />\n      </Router>);\n    }\n\n    return (\n      <Router>\n      <div style={{ float: 'left', position: 'relative', height: '100vh' }}>\n        <Sidebar>\n          <Sidebar.Header\n            logo=\"Cloud Pricing\"\n            onClick={() => console.log('logo clicked')}\n            aria-label=\"Return to the home page\"\n          />\n          <br />\n          <Sidebar.Section>\n            <Sidebar.Item onClick={() => { this.setState({ redirect: true, redirect_to: \"/\" })}} title=\"Home\" icon=\"home\" active />\n          </Sidebar.Section>\n          <Sidebar.Section label=\"reports\">\n            <Sidebar.Item onClick={() => { this.setState({ redirect: true, redirect_to: \"/tags\" })}} title=\"Tags\" icon=\"tag\" active />\n            <Sidebar.Item onClick={() => { this.setState({ redirect: true, redirect_to: \"/instances\" })}} title=\"Instances\" icon=\"structure\" active />\n          </Sidebar.Section>\n        </Sidebar>\n        </div>\n        <div style={{ position: 'relative', height: '100vh' }} className=\"app-main-content\">\n        <Content>\n          <Route path=\"/\" exact component={Index} />\n          <Route path=\"/tags/:tag_key/:tag_value\" exact component={Tag} />\n          <Route path=\"/tags/:tag_key\" exact component={Tags} />\n          <Route path=\"/tags\" exact component={Tags} />\n          <Route path=\"/instances\" exact component={Instances} />\n        </Content>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default AppRouter;\n","import React from 'react';\nimport './App.css';\n\nimport AppRouter from './AppRouter';\n\nimport date from './data_updated.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n      <footer>\n      Data Last Updated: { date() }\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","export default function date() { return \"owjefij\" };\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, toJS } from 'mobx'\n\nconst axios = require('axios');\nconst moment = require('moment');\n\n\nclass SimpleTag {\n    @observable key\n    @observable value\n\n    constructor(key, value) {\n      this.key = key\n      this.value = value\n    }\n}\n\nclass Instance {\n  @observable id\n  @observable effectiveHourly\n  @observable name\n  @observable nodeType\n  @observable os\n  @observable provider\n  @observable region\n  @observable resourceIdentifier\n  @observable service\n  @observable tags = []\n  @observable totalSpend\n  @observable vendorAccountId\n  @observable lastSeen\n  @observable hoursRunning\n\n  constructor(instance) {\n    this.id = instance.id;\n    this.effectiveHourly = instance.effectiveHourly;\n    this.name = instance.name;\n    this.nodeType = instance.nodeType;\n    this.os = instance.os;\n    this.provider = instance.provider;\n    this.region = instance.region;\n    this.resourceIdentifier = instance.resourceIdentifier;\n    this.service = instance.service;\n    this.lastSeen = instance.lastSeen;\n    this.hoursRunning = instance.hoursRunning;\n    this.tags = instance.tags.map((tag) => {\n      return new SimpleTag(tag.vendorKey, tag.vendorValue);\n    });\n    this.totalSpend = instance.totalSpend;\n    this.vendorAccountId = instance.vendorAccountId;\n  }\n}\n\nclass Tag {\n  @observable key\n  @observable value\n  @observable count\n  @observable cost\n  @observable hourly\n  @observable monthly\n\n  constructor(key, value, tag, instances) {\n    console.log(key);\n    console.log(value);\n    this.key = key\n    this.value = value\n    this.hourly = tag.hourly\n    this.count = tag.count\n    this.monthly = tag.monthly\n    this.cost = tag.cost\n  }\n}\n\nclass DataStore {\n  @observable data = 'supercalifragilisticexpialidocious'\n  @observable instances = []\n  @observable tags = []\n  @observable title = \"\"\n  @observable state = \"\"\n\n  instancesThatMatchTags(key, val, size, page) {\n    let retVal = [];\n    let noneRetVal = [];\n    let noneRetValAssigned = false;\n\n    for (let instance of this.instances) {\n      var seen = false;\n      instance.tags.forEach((tag) => {\n        if (val === 'none') {\n          if (key === tag.key) {\n            seen = true\n          }\n        } else {\n          if ((key === tag.key) && (val === tag.value)) {\n            retVal.push(instance);\n          }\n        }\n      });\n      if (val === 'none' && seen === false) {\n        noneRetVal.push(instance);\n      }\n\n      var pageMax = size + (size * (page - 1));\n      if (noneRetVal.length > pageMax && noneRetValAssigned === false) {\n        retVal = noneRetVal;\n        noneRetValAssigned = true\n      }\n    }\n    let pages = 1;\n    if (val === 'none') {\n      if (retVal.length === 0) {\n        retVal = noneRetVal;\n      }\n      pages = Math.ceil(noneRetVal.length / size);\n    } else {\n      pages = Math.ceil(retVal.length / size);\n    }\n    var fromPage = size * (page - 1) + 1\n    var toPage = (size * (page - 1)) + size\n    return [retVal.slice(fromPage, toPage), pages];\n  }\n\n  summarizedTags(keys) {\n    let retVal = {};\n    const tmpArray = this.tagsThatMatchKeys(keys);\n\n    tmpArray.forEach(function(tmpTag) {\n      if (!(tmpTag.key in retVal)) {\n        retVal[tmpTag.key] = {};\n      }\n\n      if (tmpTag.value === 'none') {\n        retVal[tmpTag.key]['none'] = tmpTag;\n      } else {\n        if ('not-none' in retVal[tmpTag.key]) {\n          var notNone = retVal[tmpTag.key]['not-none']\n\n\n          let newCost = notNone.cost + tmpTag.cost\n          let newCount = notNone.count + tmpTag.count\n          let newHourly = notNone.hourly + tmpTag.hourly\n          let newMonthly = notNone.monthly + tmpTag.monthly\n\n          retVal[tmpTag.key]['not-none'] = new Tag(tmpTag.key, tmpTag.value, {\n            key: tmpTag.key,\n            value: \"Not None\",\n            cost: newCost,\n            count: newCount,\n            hourly: newHourly,\n            monthly: newMonthly,\n          });\n        } else {\n          retVal[tmpTag.key]['not-none'] = tmpTag;\n        }\n      }\n    });\n\n    var result = [];\n    console.log(retVal);\n    Object.keys(retVal).forEach(function(a, b) {\n      console.log(a);\n      Object.keys(retVal[a]).forEach(function(c, d) {\n        result.push(retVal[a][c]);\n      })\n    })\n    console.log(result);\n\n    return result;\n  }\n\n  tagsThatMatchKeys(keys) {\n    let retVal = [];\n    this.tags.map((tag) => {\n      if ((typeof keys === 'object' && keys.includes(tag.key)) || (typeof keys === 'string' && keys === tag.key)) {\n        retVal.push(tag) ;\n      }\n    });\n\n    return retVal;\n  }\n\n\n  instancesThatMatchTagKeys(key, val) {\n    var retVal = [];\n    var matchesTag;\n    var instanceCount = 0;\n\n    this.instances.map((instance) => {\n      matchesTag = 0;\n\n      instance.tags.forEach((tag) => {\n        if (key === tag.key) {\n          retVal.push(instance);\n        }\n      });\n\n      if (matchesTag === 0) {\n        instanceCount++;\n      }\n    });\n    return retVal;\n  }\n\n\n  fetchInstances(cb) {\n    var store = this;\n    console.log(\"Getting from /api/v1/instances\");\n    axios.get('/api/v1/instances')\n      .then((res: any) => res.data)\n      .then(function(res: any) {\n        store.instances   = res.map((instance)     => new Instance(instance))\n        store.state    = \"done\"\n        cb(store.instances);\n      })\n      .catch((err: any) => {\n        console.log(\"in axios \", err)\n        store.state = \"error\"\n      })\n  }\n\n  load(store, storeName) {\n    var storeData = window.localStorage.getItem(`${storeName}-lastSaved`)\n    var lastSaved = window.localStorage.getItem(`${storeName}-lastSaved`)\n    if (lastSaved && (Date.now - lastSaved > 300)) {\n      this[storeName] = storeData;\n      return true;\n    }\n    return false;\n  }\n\n  save(store, storeName) {\n    const json = JSON.stringify(toJS(store));\n    window.localStorage.setItem(`${storeName}-store`, json)\n    window.localStorage.setItem(`${storeName}-lastSaved`, Date.now())\n  }\n\n  fetchTags(cb) {\n    if (this.load(store, 'tags')) {\n      cb(store.tags);\n    }\n    var store = this;\n    axios.get('/api/v1/tags')\n      .then((res: any) => res.data)\n      .then(function(res: any) {\n        var newTags = []\n        res.forEach((uniqueTag) => {\n          console.log(uniqueTag);\n          let tag = new Tag(uniqueTag.key, uniqueTag.value, uniqueTag)\n          if (tag.hourly > 0 || tag.count > 0 || tag.cost > 0) {\n            newTags.push(tag);\n          }\n        });\n        store.tags  = newTags;\n        store.state = \"done\"\n        cb(store.tags);\n      })\n      .catch((err: any) => {\n        console.log(\"in axios \", err)\n        store.state = \"error\"\n      })\n\n  }\n\n}\n\nexport default DataStore\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'mobx-react'\nimport DataStore from './stores/dataStore'\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport '@puppet/react-components/source/scss/library/ui.scss';\n\nclass RootStore {\n  constructor() {\n    this.dataStore           = new DataStore(this)\n  }\n}\n\n\nReactDOM.render(\n\t<Provider rootStore={new RootStore()}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}