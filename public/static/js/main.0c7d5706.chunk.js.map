{"version":3,"sources":["Components/Index.js","Components/Tag.js","Components/Tags.js","Components/Instances.js","AppRouter.js","App.js","data_updated.js","serviceWorker.js","stores/dataStore.js","index.js"],"names":["Index","inject","observer","Component","isPrivate","Tag","props","state","pageSize","currentPage","tagKey","tagValue","instanceData","pageCount","changePageSize","bind","pageSelectFunc","this","rootStore","dataStore","fetchInstances","page","setState","console","log","tag_key","match","params","tag_value","ret","instancesThatMatchTags","parseInt","Field","type","name","label","value","onChange","options","delta","onClickHandler","data","toJS","columns","dataKey","Tags","loading","loadingThing","fetchTags","tag_data","length","tagsThatMatchKey","tags","table","cellDataGetter","rowData","cellRenderer","href","key","instances","AppRouter","redirect","redirect_to","to","style","float","position","height","Header","logo","onClick","aria-label","Section","Item","title","icon","active","className","path","exact","component","Instances","React","App","Boolean","window","location","hostname","axios","require","SimpleTag","observable","Instance","instance","id","effectiveHourly","nodeType","os","provider","region","resourceIdentifier","service","lastSeen","hoursRunning","map","tag","vendorKey","vendorValue","totalSpend","vendorAccountId","hourly","count","monthy","monthly","cost","DataStore","val","size","retVal","noneRetVal","noneRetValAssigned","seen","forEach","push","pageMax","pages","Math","ceil","fromPage","toPage","slice","instanceCount","cb","store","get","then","res","catch","err","storeName","storeData","localStorage","getItem","lastSaved","Date","now","json","JSON","stringify","setItem","load","newTags","uniqueTag","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0c7d5706.chunk.js","sourcesContent":["import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\n\nimport { OverlayTrigger } from 'react-bootstrap';\nimport { Icon } from '@puppet/react-components';\n\n@inject('rootStore')\n@observer\nclass Index extends Component {\n  static isPrivate = true\n\n  render () {\n    return (\n      <div>\n      </div>\n    )\n  }\n}\n\nexport default Index\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\n\nimport { Table } from '@puppet/react-components';\nimport { toJS } from 'mobx'\n\nimport { OverlayTrigger } from 'react-bootstrap';\nimport { Form, Icon } from '@puppet/react-components';\nimport { TablePageSelector } from '@puppet/data-grid';\n\n@inject('rootStore')\n@observer\nclass Tag extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      pageSize: \"10\",\n      currentPage: 1,\n      tagKey: \"\",\n      tagValue: \"\",\n      instanceData: [],\n      pageCount: 0\n    };\n\n    this.changePageSize = this.changePageSize.bind(this);\n    this.pageSelectFunc = this.pageSelectFunc.bind(this);\n  }\n\n  componentDidMount(props, state) {\n    this.props.rootStore.dataStore.fetchInstances(() => {});\n  }\n\n  pageSelectFunc(page) {\n    this.setState({\n      currentPage: page\n    });\n  }\n\n  changePageSize(pageSize) {\n    console.log(`Setting Pagesize to ${pageSize}`);\n    this.setState({\n      pageSize: pageSize\n    });\n  }\n\n  render () {\n    const tag_key   = this.props.match.params.tag_key\n    const tag_value = this.props.match.params.tag_value\n\n    var ret = this.props.rootStore.dataStore.instancesThatMatchTags(tag_key, tag_value, parseInt(this.state.pageSize), this.state.currentPage);\n    var instanceData = ret[0];\n    var pageCount = ret[1]\n\n    const columns = [\n      { label: 'id', dataKey: 'id' },\n      { label: 'effectiveHourly', dataKey: 'effectiveHourly' },\n      { label: 'name', dataKey: 'name' },\n      { label: 'nodeType', dataKey: 'nodeType' },\n      { label: 'os', dataKey: 'os' },\n      { label: 'provider', dataKey: 'provider' },\n      { label: 'region', dataKey: 'region' },\n      { label: 'resourceIdentifier', dataKey: 'resourceIdentifier' },\n      { label: 'service', dataKey: 'service' },\n      { label: 'totalSpend', dataKey: 'totalSpend' },\n      { label: 'Account ID', dataKey: 'vendorAccountId' }\n    ];\n\n    const pageSizeOptions = [\n      { value: \"10\", label: \"10\" },\n      { value: \"25\", label: \"25\" },\n      { value: \"50\", label: \"50\" },\n      { value: \"100\", label: \"100\" },\n    ];\n\n    console.log(this.pageSelectFunc);\n\n    return (\n      <div>\n        <br />\n        <h1>Tag</h1>\n        <div>\n          <b>{this.state.tagKey}</b> {this.state.tagValue}\n        </div>\n        <br />\n\n        <Form.Field\n          type=\"select\"\n          name=\"pageSize\"\n          label=\"pagesize\"\n          value={this.state.pageSize}\n          onChange={this.changePageSize}\n          options={pageSizeOptions}\n        />\n\n        <TablePageSelector\n          currentPage={this.state.currentPage}\n          pageCount={pageCount}\n          delta=\"1\"\n          onClickHandler={this.pageSelectFunc}\n        />\n\n        <Table data={toJS(instanceData)} columns={columns} />\n      </div>\n    )\n  }\n}\n\nexport default Tag\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\n\nimport { Table } from '@puppet/react-components';\nimport { toJS } from 'mobx'\n\nimport { OverlayTrigger } from 'react-bootstrap';\nimport { Icon } from '@puppet/react-components';\n\n@inject('rootStore')\n@observer\nclass Tags extends Component {\n  static isPrivate = true\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      loading: true,\n      loadingThing: 'tags',\n    };\n    this.props.rootStore.dataStore.fetchTags(() => {\n      this.setState({loading: false});\n    });\n  }\n\n  render () {\n    const tag_key = this.props.match.params.tag_key\n    let tag_data;\n\n    if (tag_key && tag_key.length > 0) {\n      console.log(tag_key);\n      tag_data = this.props.rootStore.dataStore.tagsThatMatchKey(tag_key);\n    } else {\n      tag_data = this.props.rootStore.dataStore.tags;\n    }\n\n    const columns = [\n      {\n        label: 'Name',\n        dataKey: 'name',\n        cellDataGetter: ({ rowData }) => rowData,\n        cellRenderer: ({ rowData }) => <a href={`/tags/${rowData.key}`}>{rowData.key}</a>\n      },\n      {\n        label: 'Value',\n        dataKey: 'value',\n        cellDataGetter: ({ rowData }) => rowData,\n        cellRenderer: ({ rowData }) => <a href={`/tags/${rowData.key}/${rowData.value}`}>{rowData.value}</a>\n      },\n      { label: 'Hourly', dataKey: 'hourly' },\n      { label: 'Monthly', dataKey: 'monthly' },\n      { label: 'Count', dataKey: 'count' },\n      { label: 'Cost', dataKey: 'cost' },\n    ];\n\n    var table;\n    if (this.state.loading) {\n      table = `Loading ${this.state.loadingThing}...`\n    } else {\n      table = <Table data={toJS(tag_data)} columns={columns} />\n    }\n\n\n    return (\n      <div>\n        <br />\n        <h1>Tags</h1>\n        {table}\n      </div>\n    )\n  }\n}\n\nexport default Tags\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react'\n\nimport { OverlayTrigger } from 'react-bootstrap';\nimport { Table } from '@puppet/react-components';\n\nimport { toJS } from 'mobx'\n\n@inject('rootStore')\n@observer\nclass Index extends Component {\n  static isPrivate = true\n\n  componentDidMount() {\n    this.props.rootStore.dataStore.fetchInstances(() => {\n\n    });\n  }\n\n  render () {\n    var instanceData = this.props.rootStore.dataStore.instances;\n\n    const columns = [\n      { label: 'id', dataKey: 'id' },\n      { label: 'effectiveHourly', dataKey: 'effectiveHourly' },\n      { label: 'name', dataKey: 'name' },\n      { label: 'nodeType', dataKey: 'nodeType' },\n      { label: 'os', dataKey: 'os' },\n      { label: 'provider', dataKey: 'provider' },\n      { label: 'region', dataKey: 'region' },\n      { label: 'resourceIdentifier', dataKey: 'resourceIdentifier' },\n      { label: 'service', dataKey: 'service' },\n      { label: 'totalSpend', dataKey: 'totalSpend' },\n      { label: 'Account ID', dataKey: 'vendorAccountId' }\n    ];\n\n    console.log(toJS(instanceData));\n\n    return (\n      <div>\n        <br />\n        <h1>Instances</h1>\n        <b>Count: </b>{toJS(instanceData).length}\n        <Table data={toJS(instanceData)} columns={columns} />;\n      </div>\n    )\n  }\n}\n\nexport default Index\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\n\nimport Index     from './Components/Index';\nimport Tag       from './Components/Tag';\nimport Tags      from './Components/Tags';\nimport Instances from './Components/Instances';\n\nimport { Sidebar, Content } from '@puppet/react-components';\n\nclass AppRouter extends React.Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      redirect: false,\n      redirect_to: \"\"\n    }\n  }\n\n  render() {\n    if (this.state.redirect === true) {\n      this.setState({\n        redirect: false\n      })\n      return (<Router>\n        <Redirect to={this.state.redirect_to} />\n      </Router>);\n    }\n\n    return (\n      <Router>\n      <div style={{ float: 'left', position: 'relative', height: '100vh' }}>\n        <Sidebar>\n          <Sidebar.Header\n            logo=\"Cloud Pricing\"\n            onClick={() => console.log('logo clicked')}\n            aria-label=\"Return to the home page\"\n          />\n          <br />\n          <Sidebar.Section>\n            <Sidebar.Item onClick={() => { this.setState({ redirect: true, redirect_to: \"/\" })}} title=\"Home\" icon=\"home\" active />\n          </Sidebar.Section>\n          <Sidebar.Section label=\"reports\">\n            <Sidebar.Item onClick={() => { this.setState({ redirect: true, redirect_to: \"/tags\" })}} title=\"Tags\" icon=\"tag\" active />\n            <Sidebar.Item onClick={() => { this.setState({ redirect: true, redirect_to: \"/instances\" })}} title=\"Instances\" icon=\"structure\" active />\n          </Sidebar.Section>\n        </Sidebar>\n        </div>\n        <div style={{ position: 'relative', height: '100vh' }} className=\"app-main-content\">\n        <Content>\n          <Route path=\"/\" exact component={Index} />\n          <Route path=\"/tags/:tag_key/:tag_value\" exact component={Tag} />\n          <Route path=\"/tags/:tag_key\" exact component={Tags} />\n          <Route path=\"/tags\" exact component={Tags} />\n          <Route path=\"/instances\" exact component={Instances} />\n        </Content>\n        </div>\n      </Router>\n    );\n  }\n}\n\nexport default AppRouter;\n","import React from 'react';\nimport './App.css';\n\nimport AppRouter from './AppRouter';\n\nimport date from './data_updated.js'\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <AppRouter />\n      <footer>\n      Data Last Updated: { date() }\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","export default function date() { return \"owjefij\" };\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, toJS } from 'mobx'\n\nconst axios = require('axios');\nconst moment = require('moment');\n\n\nclass SimpleTag {\n    @observable key\n    @observable value\n\n    constructor(key, value) {\n      this.key = key\n      this.value = value\n    }\n}\n\nclass Instance {\n  @observable id\n  @observable effectiveHourly\n  @observable name\n  @observable nodeType\n  @observable os\n  @observable provider\n  @observable region\n  @observable resourceIdentifier\n  @observable service\n  @observable tags = []\n  @observable totalSpend\n  @observable vendorAccountId\n  @observable lastSeen\n  @observable hoursRunning\n\n  constructor(instance) {\n    this.id = instance.id;\n    this.effectiveHourly = instance.effectiveHourly;\n    this.name = instance.name;\n    this.nodeType = instance.nodeType;\n    this.os = instance.os;\n    this.provider = instance.provider;\n    this.region = instance.region;\n    this.resourceIdentifier = instance.resourceIdentifier;\n    this.service = instance.service;\n    this.lastSeen = instance.lastSeen;\n    this.hoursRunning = instance.hoursRunning;\n    this.tags = instance.tags.map((tag) => {\n      return new SimpleTag(tag.vendorKey, tag.vendorValue);\n    });\n    this.totalSpend = instance.totalSpend;\n    this.vendorAccountId = instance.vendorAccountId;\n  }\n}\n\nclass Tag {\n  @observable key\n  @observable value\n  @observable count\n  @observable cost\n  @observable hourly\n  @observable monthly\n\n  constructor(key, value, tag, instances) {\n    console.log(key);\n    console.log(value);\n    this.key = key\n    this.value = value\n    this.hourly = tag.hourly\n    this.count = tag.count\n    this.monthy = tag.monthly\n    this.cost = tag.cost\n  }\n}\n\nclass DataStore {\n  @observable data = 'supercalifragilisticexpialidocious'\n  @observable instances = []\n  @observable tags = []\n  @observable title = \"\"\n  @observable state = \"\"\n\n  instancesThatMatchTags(key, val, size, page) {\n    let retVal = [];\n    let noneRetVal = [];\n    let noneRetValAssigned = false;\n\n    for (let instance of this.instances) {\n      var seen = false;\n      instance.tags.forEach((tag) => {\n        if (val == 'none') {\n          if (key === tag.key) {\n            seen = true\n          }\n        } else {\n          if ((key === tag.key) && (val === tag.value)) {\n            retVal.push(instance);\n          }\n        }\n      });\n      if (val == 'none' && seen == false) {\n        noneRetVal.push(instance);\n      }\n\n      var pageMax = size + (size * (page - 1));\n      if (noneRetVal.length > pageMax && noneRetValAssigned === false) {\n        retVal = noneRetVal;\n        noneRetValAssigned = true\n      }\n    }\n    let pages = 1;\n    if (val == 'none') {\n      if (retVal.length == 0) {\n        retVal = noneRetVal;\n      }\n      pages = Math.ceil(noneRetVal.length / size);\n    } else {\n      pages = Math.ceil(retVal.length / size);\n    }\n    console.log(\"Returning\");\n    console.log(pages);\n    console.log(retVal);\n    console.log(noneRetVal);\n    var fromPage = size * (page - 1) + 1\n    var toPage = (size * (page - 1)) + size\n    console.log(`From: ${fromPage}`)\n    console.log(`To: ${toPage}`)\n    return [retVal.slice(fromPage, toPage), pages];\n  }\n\n  tagsThatMatchKey(key) {\n    let retVal = [];\n    this.tags.map((tag) => {\n      if (tag.key === key) {\n        retVal.push(tag) ;\n      }\n    });\n\n    return retVal;\n  }\n\n  instancesThatMatchTagKeys(key, val) {\n    var retVal = [];\n    var matchesTag;\n    var instanceCount = 0;\n\n    this.instances.map((instance) => {\n      matchesTag = 0;\n\n      instance.tags.forEach((tag) => {\n        if (key === tag.key) {\n          retVal.push(instance);\n        }\n      });\n\n      if (matchesTag === 0) {\n        instanceCount++;\n      }\n    });\n    return retVal;\n  }\n\n\n  fetchInstances(cb) {\n    var store = this;\n    console.log(\"Getting from /api/v1/instances\");\n    axios.get('/api/v1/instances')\n      .then((res: any) => res.data)\n      .then(function(res: any) {\n        store.instances   = res.map((instance)     => new Instance(instance))\n        store.state    = \"done\"\n        cb(store.instances);\n      })\n      .catch((err: any) => {\n        console.log(\"in axios \", err)\n        store.state = \"error\"\n      })\n  }\n\n  load(store, storeName) {\n    var storeData = window.localStorage.getItem(`${storeName}-lastSaved`)\n    var lastSaved = window.localStorage.getItem(`${storeName}-lastSaved`)\n    if (lastSaved && (Date.now - lastSaved > 300)) {\n      this[storeName] = storeData;\n      return true;\n    }\n    return false;\n  }\n\n  save(store, storeName) {\n    const json = JSON.stringify(toJS(store));\n    window.localStorage.setItem(`${storeName}-store`, json)\n    window.localStorage.setItem(`${storeName}-lastSaved`, Date.now())\n  }\n\n  fetchTags(cb) {\n    if (this.load(store, 'tags')) {\n      cb(store.tags);\n    }\n    var store = this;\n    axios.get('/api/v1/tags')\n      .then((res: any) => res.data)\n      .then(function(res: any) {\n        var newTags = []\n        res.forEach((uniqueTag) => {\n          console.log(uniqueTag);\n          let tag = new Tag(uniqueTag.key, uniqueTag.value, uniqueTag)\n          if (tag.hourly > 0 || tag.count > 0 || tag.cost > 0) {\n            newTags.push(tag);\n          }\n        });\n        store.tags  = newTags;\n        store.state = \"done\"\n        cb(store.tags);\n      })\n      .catch((err: any) => {\n        console.log(\"in axios \", err)\n        store.state = \"error\"\n      })\n\n  }\n\n}\n\nexport default DataStore\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport { Provider } from 'mobx-react'\nimport DataStore from './stores/dataStore'\n\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport '@puppet/react-components/source/scss/library/ui.scss';\n\nclass RootStore {\n  constructor() {\n    this.dataStore           = new DataStore(this)\n  }\n}\n\n\nReactDOM.render(\n\t<Provider rootStore={new RootStore()}>\n\t\t<App />\n\t</Provider>,\n\tdocument.getElementById('root')\n)\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}